// Generated by gencpp from file tts/TTSLength.msg
// DO NOT EDIT!


#ifndef TTS_MESSAGE_TTSLENGTH_H
#define TTS_MESSAGE_TTSLENGTH_H

#include <ros/service_traits.h>


#include <tts/TTSLengthRequest.h>
#include <tts/TTSLengthResponse.h>


namespace tts
{

struct TTSLength
{

typedef TTSLengthRequest Request;
typedef TTSLengthResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TTSLength
} // namespace tts


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::tts::TTSLength > {
  static const char* value()
  {
    return "1d9d61cca01d099b421f450f3266e6fd";
  }

  static const char* value(const ::tts::TTSLength&) { return value(); }
};

template<>
struct DataType< ::tts::TTSLength > {
  static const char* value()
  {
    return "tts/TTSLength";
  }

  static const char* value(const ::tts::TTSLength&) { return value(); }
};


// service_traits::MD5Sum< ::tts::TTSLengthRequest> should match 
// service_traits::MD5Sum< ::tts::TTSLength > 
template<>
struct MD5Sum< ::tts::TTSLengthRequest>
{
  static const char* value()
  {
    return MD5Sum< ::tts::TTSLength >::value();
  }
  static const char* value(const ::tts::TTSLengthRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::tts::TTSLengthRequest> should match 
// service_traits::DataType< ::tts::TTSLength > 
template<>
struct DataType< ::tts::TTSLengthRequest>
{
  static const char* value()
  {
    return DataType< ::tts::TTSLength >::value();
  }
  static const char* value(const ::tts::TTSLengthRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::tts::TTSLengthResponse> should match 
// service_traits::MD5Sum< ::tts::TTSLength > 
template<>
struct MD5Sum< ::tts::TTSLengthResponse>
{
  static const char* value()
  {
    return MD5Sum< ::tts::TTSLength >::value();
  }
  static const char* value(const ::tts::TTSLengthResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::tts::TTSLengthResponse> should match 
// service_traits::DataType< ::tts::TTSLength > 
template<>
struct DataType< ::tts::TTSLengthResponse>
{
  static const char* value()
  {
    return DataType< ::tts::TTSLength >::value();
  }
  static const char* value(const ::tts::TTSLengthResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TTS_MESSAGE_TTSLENGTH_H
