// Generated by gencpp from file performances/Current.msg
// DO NOT EDIT!


#ifndef PERFORMANCES_MESSAGE_CURRENT_H
#define PERFORMANCES_MESSAGE_CURRENT_H

#include <ros/service_traits.h>


#include <performances/CurrentRequest.h>
#include <performances/CurrentResponse.h>


namespace performances
{

struct Current
{

typedef CurrentRequest Request;
typedef CurrentResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Current
} // namespace performances


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::performances::Current > {
  static const char* value()
  {
    return "60f910a2f5cc14b982946ccdb2fea967";
  }

  static const char* value(const ::performances::Current&) { return value(); }
};

template<>
struct DataType< ::performances::Current > {
  static const char* value()
  {
    return "performances/Current";
  }

  static const char* value(const ::performances::Current&) { return value(); }
};


// service_traits::MD5Sum< ::performances::CurrentRequest> should match 
// service_traits::MD5Sum< ::performances::Current > 
template<>
struct MD5Sum< ::performances::CurrentRequest>
{
  static const char* value()
  {
    return MD5Sum< ::performances::Current >::value();
  }
  static const char* value(const ::performances::CurrentRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::performances::CurrentRequest> should match 
// service_traits::DataType< ::performances::Current > 
template<>
struct DataType< ::performances::CurrentRequest>
{
  static const char* value()
  {
    return DataType< ::performances::Current >::value();
  }
  static const char* value(const ::performances::CurrentRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::performances::CurrentResponse> should match 
// service_traits::MD5Sum< ::performances::Current > 
template<>
struct MD5Sum< ::performances::CurrentResponse>
{
  static const char* value()
  {
    return MD5Sum< ::performances::Current >::value();
  }
  static const char* value(const ::performances::CurrentResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::performances::CurrentResponse> should match 
// service_traits::DataType< ::performances::Current > 
template<>
struct DataType< ::performances::CurrentResponse>
{
  static const char* value()
  {
    return DataType< ::performances::Current >::value();
  }
  static const char* value(const ::performances::CurrentResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PERFORMANCES_MESSAGE_CURRENT_H
