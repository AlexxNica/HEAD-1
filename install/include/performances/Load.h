// Generated by gencpp from file performances/Load.msg
// DO NOT EDIT!


#ifndef PERFORMANCES_MESSAGE_LOAD_H
#define PERFORMANCES_MESSAGE_LOAD_H

#include <ros/service_traits.h>


#include <performances/LoadRequest.h>
#include <performances/LoadResponse.h>


namespace performances
{

struct Load
{

typedef LoadRequest Request;
typedef LoadResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Load
} // namespace performances


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::performances::Load > {
  static const char* value()
  {
    return "3cf9ab71d8d41cf259dd332e6f7c0a24";
  }

  static const char* value(const ::performances::Load&) { return value(); }
};

template<>
struct DataType< ::performances::Load > {
  static const char* value()
  {
    return "performances/Load";
  }

  static const char* value(const ::performances::Load&) { return value(); }
};


// service_traits::MD5Sum< ::performances::LoadRequest> should match 
// service_traits::MD5Sum< ::performances::Load > 
template<>
struct MD5Sum< ::performances::LoadRequest>
{
  static const char* value()
  {
    return MD5Sum< ::performances::Load >::value();
  }
  static const char* value(const ::performances::LoadRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::performances::LoadRequest> should match 
// service_traits::DataType< ::performances::Load > 
template<>
struct DataType< ::performances::LoadRequest>
{
  static const char* value()
  {
    return DataType< ::performances::Load >::value();
  }
  static const char* value(const ::performances::LoadRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::performances::LoadResponse> should match 
// service_traits::MD5Sum< ::performances::Load > 
template<>
struct MD5Sum< ::performances::LoadResponse>
{
  static const char* value()
  {
    return MD5Sum< ::performances::Load >::value();
  }
  static const char* value(const ::performances::LoadResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::performances::LoadResponse> should match 
// service_traits::DataType< ::performances::Load > 
template<>
struct DataType< ::performances::LoadResponse>
{
  static const char* value()
  {
    return DataType< ::performances::Load >::value();
  }
  static const char* value(const ::performances::LoadResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PERFORMANCES_MESSAGE_LOAD_H
