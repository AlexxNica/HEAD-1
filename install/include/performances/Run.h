// Generated by gencpp from file performances/Run.msg
// DO NOT EDIT!


#ifndef PERFORMANCES_MESSAGE_RUN_H
#define PERFORMANCES_MESSAGE_RUN_H

#include <ros/service_traits.h>


#include <performances/RunRequest.h>
#include <performances/RunResponse.h>


namespace performances
{

struct Run
{

typedef RunRequest Request;
typedef RunResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Run
} // namespace performances


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::performances::Run > {
  static const char* value()
  {
    return "722a4133f235106aa61195f0a0d0ebce";
  }

  static const char* value(const ::performances::Run&) { return value(); }
};

template<>
struct DataType< ::performances::Run > {
  static const char* value()
  {
    return "performances/Run";
  }

  static const char* value(const ::performances::Run&) { return value(); }
};


// service_traits::MD5Sum< ::performances::RunRequest> should match 
// service_traits::MD5Sum< ::performances::Run > 
template<>
struct MD5Sum< ::performances::RunRequest>
{
  static const char* value()
  {
    return MD5Sum< ::performances::Run >::value();
  }
  static const char* value(const ::performances::RunRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::performances::RunRequest> should match 
// service_traits::DataType< ::performances::Run > 
template<>
struct DataType< ::performances::RunRequest>
{
  static const char* value()
  {
    return DataType< ::performances::Run >::value();
  }
  static const char* value(const ::performances::RunRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::performances::RunResponse> should match 
// service_traits::MD5Sum< ::performances::Run > 
template<>
struct MD5Sum< ::performances::RunResponse>
{
  static const char* value()
  {
    return MD5Sum< ::performances::Run >::value();
  }
  static const char* value(const ::performances::RunResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::performances::RunResponse> should match 
// service_traits::DataType< ::performances::Run > 
template<>
struct DataType< ::performances::RunResponse>
{
  static const char* value()
  {
    return DataType< ::performances::Run >::value();
  }
  static const char* value(const ::performances::RunResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PERFORMANCES_MESSAGE_RUN_H
