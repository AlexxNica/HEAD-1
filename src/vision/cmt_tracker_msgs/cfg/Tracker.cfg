#!/usr/bin/env python
PACKAGE = "cmt_tracker_msgs"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("factor", double_t, 0, "Scale between Current Active Point to Initial Active Point Before Tracker Lost",0.6, 0, 1)
gen.add("frame_counter", int_t, 0, "Number of Frames before we discard the CMT tracker instance", 10, 1, 300)

# Based on this http://docs.opencv.org/2.4/modules/features2d/doc/common_interfaces_of_feature_detectors.html#featuredetector-create


detector_enum = gen.enum([ gen.const("FAST",  str_t, "FAST","FAST"),
                       gen.const("STAR", str_t, "STAR","STAR"),
                       # gen.const("SIFT",   str_t, "SIFT","SIFT"),
                       # gen.const("SURF", str_t, "SURF","SURF"),
                       gen.const("ORB", str_t, "ORB","ORB"),
                       gen.const("BRISK", str_t, "BRISK","BRISK"),
                       gen.const("GFTT", str_t, "GFTT","GFTT"),
                       gen.const("HARRIS", str_t, "HARRIS","HARRIS"),
                       gen.const("Dense", str_t, "Dense","Dense"),
                       gen.const("SimpleBlob", str_t, "SimpleBlob","SimpleBlob")],
                     "An enum to set Feature Detector in CppMT")


#http://docs.opencv.org/2.4/modules/features2d/doc/common_interfaces_of_descriptor_extractors.html#descriptorextractor-create
descriptor_enum = gen.enum([
                       # gen.const("d_SIFT",   str_t, "SIFT","SIFT"),
                       # gen.const("d_SURF", str_t, "SURF","SURF"),
                       gen.const("d_BRIEF", str_t, "SURF","BRIEF"),
                       gen.const("d_ORB", str_t, "ORB","ORB"),
                       gen.const("d_BRISK", str_t, "BRISK","BRISK"),
                       gen.const("d_FREAK", str_t, "Dense","Dense")],
                     "An enum to set Feature descriptor in CppMT")

estimation_enum = gen.enum([
                       gen.const("CONSENSUS",   str_t, "CONSENSUS","CONSENSUS"),
                       gen.const("RANSAC", str_t, "RANSAC","RANSAC")],
                     "An enum to set Feature descriptor in CppMT")
#TODO add combination; Via using Adapters to create combination of features.
gen.add("detector", str_t, 0, "Set Feature Detector to use for CppMT", "FAST", edit_method=detector_enum)
gen.add("descriptor", str_t, 0, "Set Feature Descriptor to use for CppMT", "BRISK", edit_method=descriptor_enum)
gen.add("estimation", str_t, 0, "Set Estimation method for CppMT", "RANSAC", edit_method=estimation_enum)
exit(gen.generate(PACKAGE, "cmt_tracker_msgs", "Tracker"))