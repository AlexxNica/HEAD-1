<!-- -*- mode: XML -*- -->
<launch>
    <arg name="name"/>
    <arg name="mini" default="False"/>
    <arg name="rviz" default="True" />
    <arg name="dev" default="False" />
    <param name="/robot_name" type="str" value="$(arg name)" />
    <group ns="/$(arg name)">
        <!-- lang: en/zh -->
        <param name="lang" value="en" />
        <rosparam file="$(find robots_config)/$(arg name)/config.yaml" command="load"/>
        <rosparam file="$(find robots_config)/$(arg name)/motors.yaml" command="load" />
        <rosparam file="$(find robots_config)/$(arg name)/expressions.yaml" command="load"/>
        <group if="$(arg mini)">
            <include file="$(find robots_config)/$(arg name)/hardware.launch" />
            <node name="basic_head_api" pkg="basic_head_api" type="head_ctrl.py"
                  respawn="true"/>
        </group>
        <group unless="$(arg mini)">
            <rosparam file="$(find robots_config)/$(arg name)/animations.yaml" command="load"/>
            <include file="$(find robots_config)/$(arg name)/hardware.launch" />
            <node name="basic_head_api" pkg="basic_head_api" type="head_ctrl.py"/>
            <node name="pau2motors" pkg="pau2motors" type="pau2motors_node.py" respawn="True" />

            <node pkg="topic_tools" type="mux" name="neck_pau" args="neck_pau cmd_neck_pau /blender_api/get_pau mux:=neck_pau_mux"/>
            <node pkg="topic_tools" type="mux" name="head_pau" args="head_pau no_pau /blender_api/get_pau mux:=head_pau_mux"/>
            <node pkg="topic_tools" type="mux" name="lips_pau" args="lips_pau head_pau lipsync_pau mux:=lips_pau_mux"/>
            <node pkg="topic_tools" type="mux" name="eyes_pau" args="eyes_pau head_pau eyes_tracking_pau mux:=eyes_pau_mux"/>

            <node name="chatbot_en" pkg="chatbot" type="ai.py" args="$(find chatbot)/aiml/ -sent">
                <param name="properties" value="$(find robots_config)/$(arg name)/bot.properties" />
            </node>
            <node name="chatbot_zh" pkg="chinese_chatbot" type="talker.py" />

            <node name="tts" pkg="tts" type="tts_talker.py">
                <param name="topic_name" value="chatbot_responses" />
            </node>

            <node name="recorder" pkg="recorder" type="continuous_recorder.py" />
            <node name="speech_recognizer" pkg="isr" type="speech_recognizer.py" />
            <node name="speech2command" pkg="speech2command" type="speech2command.py" />

            <node pkg="topic_tools" type="mux" name="tts" args="tts chatbot_responses web_responses mux:=tts_mux"/>
            <node pkg="topic_tools" type="mux" name="tts_en" args="tts_en chatbot_responses_en web_responses_en mux:=tts_en_mux"/>
            <node pkg="topic_tools" type="mux" name="tts_zh" args="tts_zh chatbot_responses_zh web_responses_zh mux:=tts_zh_mux"/>
        </group>
    </group>

    <include file="$(find webui)/webui.launch" />

    <!-- Perception outside the namespace -->
    <group unless="$(arg mini)">
        <include file="$(find perception)/launch/geometry.launch">
            <arg name="model" value="$(find robots_config)/$(arg name)/description.urdf" />
            <arg name="gui" value="$(arg rviz)" />
        </include>

        <include file="$(find robots_config)/$(arg name)/tracker.launch" unless="$(arg dev)" />
        <include file="$(find perception)/launch/tracker-single-cam.launch" if="$(arg dev)" />
    </group>
    <!-- Rosbridge for webui -->
    <node name="rosbridge_websocket" pkg="rosbridge_server" type="rosbridge_websocket">
      <param name="authenticate" value="false" />
      <param name="port" value="9090"/>
      <param name="address" value=""/>
    </node>
    <node name="rosapi" pkg="rosapi" type="rosapi_node" />
</launch>
